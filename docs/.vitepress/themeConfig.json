{
  "sidebar": [
    {
      "text": "通信协议",
      "items": [
        {
          "text": "REST API 与 GraphQL",
          "link": "Chapter1.通信协议/1.REST_s_API_s_与_s_GraphQL.md"
        },
        {
          "text": "gRPC 是如何工作的？",
          "link": "Chapter1.通信协议/2.gRPC_s_是如何工作的？.md"
        },
        {
          "text": "什么是 Webhook？",
          "link": "Chapter1.通信协议/3.什么是_s_Webhook？.md"
        },
        {
          "text": "如何提高 API 性能？",
          "link": "Chapter1.通信协议/4.如何提高_s_API_s_性能？.md"
        },
        {
          "text": "HTTP 1.0 -> HTTP 1.1 -> HTTP 2.0 -> HTTP 3.0 (QUIC)",
          "link": "Chapter1.通信协议/5.HTTP_s_1_dot_0_s_-_gt__s_HTTP_s_1_dot_1_s_-_gt__s_HTTP_s_2_dot_0_s_-_gt__s_HTTP_s_3_dot_0_s_(QUIC).md"
        },
        {
          "text": "SOAP vs REST vs GraphQL vs RPC",
          "link": "Chapter1.通信协议/6.SOAP_s_vs_s_REST_s_vs_s_GraphQL_s_vs_s_RPC.md"
        },
        {
          "text": "代码优先 vs. API 优先",
          "link": "Chapter1.通信协议/7.代码优先_s_vs_dot__s_API_s_优先.md"
        },
        {
          "text": "HTTP 状态码",
          "link": "Chapter1.通信协议/8.HTTP_s_状态码.md"
        },
        {
          "text": "API 网关是做什么的？",
          "link": "Chapter1.通信协议/9.API_s_网关是做什么的？.md"
        },
        {
          "text": "我们如何设计有效且安全的 API？",
          "link": "Chapter1.通信协议/10.我们如何设计有效且安全的_s_API？.md"
        },
        {
          "text": "TCP/IP 封装",
          "link": "Chapter1.通信协议/11.TCP_fs_IP_s_封装.md"
        },
        {
          "text": "为什么 Nginx 被称为“反向”代理？",
          "link": "Chapter1.通信协议/12.为什么_s_Nginx_s_被称为“反向”代理？.md"
        },
        {
          "text": "常见的负载均衡算法有哪些？",
          "link": "Chapter1.通信协议/13.常见的负载均衡算法有哪些？.md"
        },
        {
          "text": "URL，URI，URN - 你知道它们之间的区别吗？",
          "link": "Chapter1.通信协议/14.URL，URI，URN_s_-_s_你知道它们之间的区别吗？.md"
        }
      ],
      "collapsed": true,
      "link": "Chapter1.通信协议/index.md"
    },
    {
      "text": "CI/CD",
      "items": [
        {
          "text": "CI/CD 管道以简单的术语解释",
          "link": "Chapter2.CI_fs_CD/1.CI_fs_CD_s_管道以简单的术语解释.md"
        },
        {
          "text": "Netflix 技术栈（CI/CD 流水线）",
          "link": "Chapter2.CI_fs_CD/2.Netflix_s_技术栈（CI_fs_CD_s_流水线）.md"
        }
      ],
      "collapsed": true
    },
    {
      "text": "架构模式",
      "items": [
        {
          "text": "MVC，MVP，MVVM，MVVM-C 和 VIPER",
          "link": "Chapter3.架构模式/1.MVC，MVP，MVVM，MVVM-C_s_和_s_VIPER.md"
        },
        {
          "text": "18 个每个开发人员都应该了解的关键设计模式",
          "link": "Chapter3.架构模式/2.18_s_个每个开发人员都应该了解的关键设计模式.md"
        },
        {
          "text": "云服务中不同数据库的简便备忘单",
          "link": "Chapter3.架构模式/3.云服务中不同数据库的简便备忘单.md"
        },
        {
          "text": "驱动您数据库的 8 种数据结构",
          "link": "Chapter3.架构模式/4.驱动您数据库的_s_8_s_种数据结构.md"
        },
        {
          "text": "数据库中如何执行 SQL 语句？",
          "link": "Chapter3.架构模式/5.数据库中如何执行_s_SQL_s_语句？.md"
        },
        {
          "text": "CAP 定理",
          "link": "Chapter3.架构模式/6.CAP_s_定理.md"
        },
        {
          "text": "存储器和存储类型",
          "link": "Chapter3.架构模式/7.存储器和存储类型.md"
        },
        {
          "text": "可视化 SQL 查询",
          "link": "Chapter3.架构模式/8.可视化_s_SQL_s_查询.md"
        },
        {
          "text": "SQL 语言",
          "link": "Chapter3.架构模式/9.SQL_s_语言.md"
        }
      ],
      "collapsed": true
    },
    {
      "text": "缓存",
      "items": [
        {
          "text": "数据被缓存在各个地方",
          "link": "Chapter4.缓存/1.数据被缓存在各个地方.md"
        },
        {
          "text": "为什么 Redis 这么快？",
          "link": "Chapter4.缓存/2.为什么_s_Redis_s_这么快？.md"
        },
        {
          "text": "Redis 如何使用？",
          "link": "Chapter4.缓存/3.Redis_s_如何使用？.md"
        },
        {
          "text": "顶级缓存策略",
          "link": "Chapter4.缓存/4.顶级缓存策略.md"
        }
      ],
      "collapsed": true
    },
    {
      "text": "微服务架构",
      "items": [
        {
          "text": "典型的微服务架构是什么样的？",
          "link": "Chapter5.微服务架构/1.典型的微服务架构是什么样的？.md"
        },
        {
          "text": "微服务最佳实践",
          "link": "Chapter5.微服务架构/2.微服务最佳实践.md"
        },
        {
          "text": "微服务通常使用哪种技术栈？",
          "link": "Chapter5.微服务架构/3.微服务通常使用哪种技术栈？.md"
        },
        {
          "text": "为什么 Kafka 快",
          "link": "Chapter5.微服务架构/4.为什么_s_Kafka_s_快.md"
        }
      ],
      "collapsed": true
    },
    {
      "text": "支付系统",
      "items": [
        {
          "text": "如何学习支付系统？",
          "link": "Chapter6.支付系统/1.如何学习支付系统？.md"
        },
        {
          "text": "为什么信用卡被称为“银行中最赚钱的产品”？VISA/Mastercard 如何赚钱？",
          "link": "Chapter6.支付系统/2.为什么信用卡被称为“银行中最赚钱的产品”？VISA_fs_Mastercard_s_如何赚钱？.md"
        },
        {
          "text": "当我们在商家店铺刷信用卡时，VISA 是如何运作的？",
          "link": "Chapter6.支付系统/3.当我们在商家店铺刷信用卡时，VISA_s_是如何运作的？.md"
        },
        {
          "text": "世界各地的支付系统系列（第 1 部分）：印度的统一支付接口（UPI）",
          "link": "Chapter6.支付系统/4.世界各地的支付系统系列（第_s_1_s_部分）：印度的统一支付接口（UPI）.md"
        }
      ],
      "collapsed": true
    },
    {
      "text": "DevOps",
      "items": [
        {
          "text": "DevOps vs. SRE vs. 平台工程。有什么区别？",
          "link": "Chapter7.DevOps/1.DevOps_s_vs_dot__s_SRE_s_vs_dot__s_平台工程。有什么区别？.md"
        },
        {
          "text": "k8s（Kubernetes）是什么？",
          "link": "Chapter7.DevOps/2.k8s（Kubernetes）是什么？.md"
        },
        {
          "text": "Docker vs. Kubernetes. 我们应该使用哪一个？",
          "link": "Chapter7.DevOps/3.Docker_s_vs_dot__s_Kubernetes_dot__s_我们应该使用哪一个？.md"
        },
        {
          "text": "Docker 是如何工作的？",
          "link": "Chapter7.DevOps/4.Docker_s_是如何工作的？.md"
        }
      ],
      "collapsed": true
    },
    {
      "text": "GIT",
      "items": [
        {
          "text": "Git 命令如何工作",
          "link": "Chapter8.GIT/1.Git_s_命令如何工作.md"
        },
        {
          "text": "Git 是如何工作的？",
          "link": "Chapter8.GIT/2.Git_s_是如何工作的？.md"
        },
        {
          "text": "Git 合并 vs. Git 变基",
          "link": "Chapter8.GIT/3.Git_s_合并_s_vs_dot__s_Git_s_变基.md"
        }
      ],
      "collapsed": true
    },
    {
      "text": "云服务",
      "items": [
        {
          "text": "不同云服务的简便备忘单（2023 版）",
          "link": "Chapter9.云服务/1.不同云服务的简便备忘单（2023_s_版）.md"
        },
        {
          "text": "什么是云原生？",
          "link": "Chapter9.云服务/2.什么是云原生？.md"
        }
      ],
      "collapsed": true
    },
    {
      "text": "开发者生产力工具",
      "items": [
        {
          "text": "可视化 JSON 文件",
          "link": "Chapter10.开发者生产力工具/1.可视化_s_JSON_s_文件.md"
        },
        {
          "text": "自动将代码转换为架构图",
          "link": "Chapter10.开发者生产力工具/2.自动将代码转换为架构图.md"
        }
      ],
      "collapsed": true
    },
    {
      "text": "Linux",
      "items": [
        {
          "text": "Linux 文件系统解释",
          "link": "Chapter11.Linux/1.Linux_s_文件系统解释.md"
        },
        {
          "text": "18 个你应该知道的最常用的 Linux 命令",
          "link": "Chapter11.Linux/2.18_s_个你应该知道的最常用的_s_Linux_s_命令.md"
        }
      ],
      "collapsed": true
    },
    {
      "text": "安全",
      "items": [
        {
          "text": "HTTPS 是如何工作的？",
          "link": "Chapter12.安全/1.HTTPS_s_是如何工作的？.md"
        },
        {
          "text": "使用简单术语解释的 Oauth 2.0。",
          "link": "Chapter12.安全/2.使用简单术语解释的_s_Oauth_s_2_dot_0。.md"
        },
        {
          "text": "认证机制的前 4 种形式",
          "link": "Chapter12.安全/3.认证机制的前_s_4_s_种形式.md"
        },
        {
          "text": "会话、cookie、JWT、令牌、SSO 和 OAuth 2.0 - 它们是什么？",
          "link": "Chapter12.安全/4.会话、cookie、JWT、令牌、SSO_s_和_s_OAuth_s_2_dot_0_s_-_s_它们是什么？.md"
        },
        {
          "text": "如何在数据库中安全存储密码以及如何验证密码？",
          "link": "Chapter12.安全/5.如何在数据库中安全存储密码以及如何验证密码？.md"
        },
        {
          "text": "向一个 10 岁的孩子解释 JSON Web Token（JWT）",
          "link": "Chapter12.安全/6.向一个_s_10_s_岁的孩子解释_s_JSON_s_Web_s_Token（JWT）.md"
        },
        {
          "text": "Google Authenticator（或其他类型的双因素认证器）是如何工作的？",
          "link": "Chapter12.安全/7.Google_s_Authenticator（或其他类型的双因素认证器）是如何工作的？.md"
        }
      ],
      "collapsed": true
    },
    {
      "text": "真实案例研究",
      "items": [
        {
          "text": "Netflix 的技术堆栈",
          "link": "Chapter13.真实案例研究/1.Netflix_s_的技术堆栈.md"
        },
        {
          "text": "Twitter 架构 2022",
          "link": "Chapter13.真实案例研究/2.Twitter_s_架构_s_2022.md"
        },
        {
          "text": "Airbnb 过去 15 年微服务架构的演变",
          "link": "Chapter13.真实案例研究/3.Airbnb_s_过去_s_15_s_年微服务架构的演变.md"
        },
        {
          "text": "单一代码库 vs. 微代码库。",
          "link": "Chapter13.真实案例研究/4.单一代码库_s_vs_dot__s_微代码库。.md"
        },
        {
          "text": "你将如何设计 Stack Overflow 网站？",
          "link": "Chapter13.真实案例研究/5.你将如何设计_s_Stack_s_Overflow_s_网站？.md"
        },
        {
          "text": "亚马逊 Prime Video 监控为什么从无服务器转向单体？如何能节省 90%的成本？",
          "link": "Chapter13.真实案例研究/6.亚马逊_s_Prime_s_Video_s_监控为什么从无服务器转向单体？如何能节省_s_90_perc_的成本？.md"
        },
        {
          "text": "迪士尼热星在比赛期间如何捕捉 50 亿个表情符号？",
          "link": "Chapter13.真实案例研究/7.迪士尼热星在比赛期间如何捕捉_s_50_s_亿个表情符号？.md"
        },
        {
          "text": "Discord 如何存储数万亿条消息",
          "link": "Chapter13.真实案例研究/8.Discord_s_如何存储数万亿条消息.md"
        },
        {
          "text": "YouTube、TikTok 直播或 Twitch 上的视频直播是如何运作的？",
          "link": "Chapter13.真实案例研究/9.YouTube、TikTok_s_直播或_s_Twitch_s_上的视频直播是如何运作的？.md"
        }
      ],
      "collapsed": true
    },
    {
      "text": "许可",
      "items": [],
      "collapsed": true,
      "link": "Chapter14.许可/index.md"
    }
  ]
}